# Settings for a Firebase App Hosting backend.
# https://firebase.google.com/docs/app-hosting/configure

# Specifies the version of the App Hosting manifest.
version: 1

# Defines the services that make up your application.
services:
  # The frontend service, our Next.js application.
  - id: frontend
    # Specifies the location of the Next.js application.
    source: .
    # The 'run' command specifies how to start the server. The build is handled automatically.
    run: npm run start
    # Environment variables needed for the build and runtime of the frontend.
    env:
      - variable: NEXT_PUBLIC_FIREBASE_API_KEY
        value: "PASTE_YOUR_NEW_API_KEY_HERE"
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
        value: "ai-startup-evaluator-472309.firebaseapp.com"
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_PROJECT_ID
        value: "ai-startup-evaluator-472309"
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
        value: "ai-startup-evaluator-472309.firebasestorage.app"
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
        value: "106488605175"
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_APP_ID
        value: "1:106488605175:web:21a11c165d5f536798e6f2"
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID
        value: "G-RF1ETWRCSH"
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_API_URL
        # In the deployed environment, the API is available at /api
        value: "/api"
        availability: [RUNTIME]

  # The backend service, our Python application.
  - id: backend
    # Specifies the location of the Python application.
    source: backend_code
    # The 'run' section specifies the command to start the server.
    # Gunicorn is a popular Python WSGI HTTP Server.
    run: gunicorn main:app --bind 0.0.0.0:$PORT

# Defines how incoming requests are routed to your services.
routing:
  # This rule directs all requests starting with /api to the backend service.
  - path: /api/.*
    service: backend

  # This is the default rule. It directs all other requests to the frontend service.
  - path: /.*
    service: frontend
